class Solution:
    def isValidSudoku(self, board: List[List[str]]) -> bool:
        row = {}
        column = {}
        grid = {}
        for i in range(9):
            row[i+1] = []
            column[i+1]=[]
            grid[i+1] = []
        for i in range(9):
            for j in range(9):
                #rows
                if(board[i][j]!="."):
                    if(board[i][j] in row[i+1]):
                       
                        return False
                    else:
                        row[i+1].append(board[i][j])
                    #colums
                    if(board[i][j] in column[j+1]):
                       
                        return False
                    else:
                        column[j+1].append(board[i][j])
                    #grid

                    if(i>=0 and i<=2 and j>=0 and j<=2):
                        if(board[i][j] in grid[1]):
                           
                            return False
                        else:
                            grid[1].append(board[i][j])
                    if(i>=0 and i<=2 and j>2 and j<=5):
                        if(board[i][j] in grid[2]):
                           
                            return False
                        else:
                            grid[2].append(board[i][j])
                    if(i>=0 and i<=2 and j>5 and j<=8):
                        if(board[i][j] in grid[3]):
                           
                            return False
                        else:
                            grid[3].append(board[i][j])
         
                    if(i>2 and i<=5 and j>=0 and j<=2):
                        if(board[i][j] in grid[4]):
                           
                            return False
                        else:
                            grid[4].append(board[i][j])
                    if(i>2 and i<=5 and j>2 and j<=5):
                        if(board[i][j] in grid[5]):
                           
                            return False
                        else:
                            grid[5].append(board[i][j])
                    if(i>2 and i<=5 and j>5 and j<=8):
                        if(board[i][j] in grid[6]):
                            
                            return False
                        else:
                            grid[6].append(board[i][j])
         
                    
                    if(i>5 and i<=8 and j>=0 and j<=2):
                            if(board[i][j] in grid[7]):
                                return False
                            else:
                                grid[7].append(board[i][j])
                    if(i>5 and i<=8 and j>2 and j<=5):
                        if(board[i][j] in grid[8]):
                            return False
                        else:
                            grid[8].append(board[i][j])
                    if(i>5 and i<=8 and j>5 and j<=8):
                        if(board[i][j] in grid[9]):
                            
                            return False
                        else:
                            grid[9].append(board[i][j])
         
                
   
        return True
